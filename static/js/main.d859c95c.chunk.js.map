{"version":3,"sources":["reportWebVitals.ts","components/common/Button/Button.tsx","components/Display/Display.tsx","components/SetMenu/SetMenu.tsx","redux/actions.ts","redux/selectors.ts","AppWithRedux.tsx","redux/counterReducer.ts","redux/state.ts","index.tsx","components/Display/Display.module.css","components/SetMenu/SetMenu.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","props","className","onClick","title","Display","classNameDisplayWrapper","show","maxValue","styles","DisplayWrapperMax","DisplayWrapper","classNameBtnIncrement","BtnIncrementMax","BtnIncrement","classNameBtnReset","startValue","BtnResetStart","BtnReset","CounterWrapper","BtnWrapper","increment","reset","SetMenu","ACTIONS_TYPE","setMenuMaxClassName","SetMenuMaxError","SetMenuMaxWrapper","setMenuStartClassName","SetMenuStartError","SetMenuStartWrapper","btnSetClassName","BtnSet","BtnSetDisable","SetMenuWrapper","type","value","localStorage","onChange","changeMaxValue","changeStartValue","BtnSetWrapper","saveData","selectAll","state","counter","setCountValueAC","countValue","SET_COUNT_VALUE","payload","setShowAC","SET_SHOW","AppWithRedux","dispatch","_useDispatch","ac","useDispatch","useSelector","maxLocalStorageValue","startLocalStorageValue","e","parseMax","currentTarget","SET_MAX_LOCAL_STORAGE_VALUE","setMaxLocalStorageValueAC","setItem","JSON","stringify","Number","parseStart","SET_START_LOCAL_STORAGE_VALUE","setStartLocalStorageValueAC","SET_MAX_VALUE","setMaxValueAC","SET_START_VALUE","setStartValueAC","count","initialState","reducers","combineReducers","action","store","createStore","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d859c95c.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ButtonHTMLAttributes, DetailedHTMLProps } from 'react';\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n  title: string\r\n}\r\n\r\nfunction Button(props: ButtonPropsType) {\r\n\r\n  return (\r\n      <div className={props.className}>\r\n        <button onClick={props.onClick}>{props.title}</button>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport Button from '../common/Button/Button';\r\n\r\nimport styles from './Display.module.css'\r\n\r\n\r\ntype DisplayPropsType = {\r\n  show: number | string\r\n  count: number\r\n  startValue: number\r\n  maxValue: number\r\n  reset: () => void\r\n  increment: () => void\r\n}\r\n\r\nfunction Display(props: DisplayPropsType) {\r\n\r\n  const classNameDisplayWrapper = (props.show === props.maxValue || props.show === 'Error') ? styles.DisplayWrapperMax : styles.DisplayWrapper\r\n\r\n  const classNameBtnIncrement = props.show === props.maxValue || props.show === 'Set' || props.show === 'Error' ? styles.BtnIncrementMax : styles.BtnIncrement\r\n  const classNameBtnReset = props.show === props.startValue || props.show === 'Set' || props.show === 'Error' ? styles.BtnResetStart : styles.BtnReset\r\n  return (\r\n    <div className={styles.CounterWrapper}>\r\n      <div className={classNameDisplayWrapper}>\r\n        {props.show}\r\n      </div>\r\n      <div className={styles.BtnWrapper}>\r\n        <Button title={'inc'} className={classNameBtnIncrement} onClick={props.increment} />\r\n        <Button title={'res'} className={classNameBtnReset} onClick={props.reset} />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import { ChangeEvent } from 'react';\r\nimport Button from '../common/Button/Button';\r\nimport styles from './SetMenu.module.css';\r\n\r\ntype setMenuPropsType = {\r\n  startValue: number\r\n  maxValue: number\r\n  show: number | string\r\n  changeMaxValue: (e: ChangeEvent<HTMLInputElement>) => void\r\n  changeStartValue: (e: ChangeEvent<HTMLInputElement>) => void\r\n  saveData: () => void\r\n}\r\n\r\nfunction SetMenu(props: setMenuPropsType) {\r\n\r\n  const setMenuMaxClassName = (props.show === 'Error') ? styles.SetMenuMaxError : styles.SetMenuMaxWrapper\r\n  const setMenuStartClassName = (props.show === 'Error') ? styles.SetMenuStartError : styles.SetMenuStartWrapper\r\n  const btnSetClassName = (props.show === 'Set') ? styles.BtnSet : styles.BtnSetDisable\r\n\r\n  return (\r\n    <div className={styles.SetMenuWrapper}>\r\n      <div className={setMenuMaxClassName}>\r\n        <div>MAX VALUE:</div>\r\n        <input type='number' value={localStorage.maxValue} onChange={props.changeMaxValue} />\r\n      </div>\r\n      <div className={setMenuStartClassName} >\r\n        <div>START VALUE:</div>\r\n        <input type='number' value={localStorage.startValue} onChange={props.changeStartValue} />\r\n      </div>\r\n      <div className={styles.BtnSetWrapper}>\r\n        <Button title={'set'} className={btnSetClassName} onClick={props.saveData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SetMenu;","import { useDispatch as _useDispatch } from 'react-redux';\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_MAX_LOCAL_STORAGE_VALUE = 'SET-MAX-LOCAL-STORAGE-VALUE',\r\n    SET_START_LOCAL_STORAGE_VALUE = 'SET-START-LOCAL-STORAGE-VALUE',\r\n    SET_MAX_VALUE = 'SET-MAX-VALUE',\r\n    SET_START_VALUE = 'SET-START-VALUE',\r\n    SET_COUNT_VALUE = 'SET-COUNT-VALUE',\r\n    SET_SHOW = 'SET-SHOW'\r\n}\r\n\r\nexport type SetMaxLocalStorageValueType = {\r\n    type: ACTIONS_TYPE.SET_MAX_LOCAL_STORAGE_VALUE,\r\n    payload: { maxLocalStorageValue: number }\r\n};\r\n\r\nexport const setMaxLocalStorageValueAC = (maxLocalStorageValue: number): SetMaxLocalStorageValueType => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_MAX_LOCAL_STORAGE_VALUE,\r\n        payload: { maxLocalStorageValue }\r\n    }\r\n};\r\n\r\nexport type SetStartLocalStorageValueType = {\r\n    type: ACTIONS_TYPE.SET_START_LOCAL_STORAGE_VALUE,\r\n    payload: { startLocalStorageValue: number }\r\n};\r\n\r\nexport const setStartLocalStorageValueAC = (startLocalStorageValue: number): SetStartLocalStorageValueType => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_START_LOCAL_STORAGE_VALUE,\r\n        payload: { startLocalStorageValue }\r\n    }\r\n};\r\n\r\nexport type SetMaxValueType = {\r\n    type: ACTIONS_TYPE.SET_MAX_VALUE,\r\n    payload: { maxValue: number }\r\n};\r\n\r\nexport const setMaxValueAC = (maxValue: number): SetMaxValueType => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_MAX_VALUE,\r\n        payload: { maxValue }\r\n    }\r\n};\r\n\r\nexport type SetStartValueType = {\r\n    type: ACTIONS_TYPE.SET_START_VALUE,\r\n    payload: { startValue: number }\r\n};\r\n\r\nexport const setStartValueAC = (startValue: number): SetStartValueType => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_START_VALUE,\r\n        payload: { startValue }\r\n    }\r\n};\r\n\r\nexport type SetCountValueType = {\r\n    type: ACTIONS_TYPE.SET_COUNT_VALUE,\r\n    payload: { countValue: number }\r\n};\r\n\r\nexport const setCountValueAC = (countValue: number): SetCountValueType => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_COUNT_VALUE,\r\n        payload: { countValue }\r\n    }\r\n};\r\n\r\nexport type SetShowType = {\r\n    type: ACTIONS_TYPE.SET_SHOW,\r\n    payload: { show: number | string }\r\n};\r\n\r\nexport const setShowAC = (show: number | string): SetShowType => {\r\n    return {\r\n        type: ACTIONS_TYPE.SET_SHOW,\r\n        payload: { show }\r\n    }\r\n};\r\n\r\nexport type CounterReducersTypes =\r\n    SetMaxLocalStorageValueType\r\n    | SetStartLocalStorageValueType\r\n    | SetMaxValueType\r\n    | SetStartValueType\r\n    | SetCountValueType\r\n    | SetShowType\r\n\r\nexport function useDispatch() {\r\n    const dispatch = _useDispatch();\r\n    return (ac: CounterReducersTypes) => {\r\n        dispatch(ac);\r\n    }\r\n}","import { IGlobalState} from './state';\r\ninterface IRootState extends IGlobalState {};\r\n\r\nexport const selectMaxLocalStorageValue = (state: IRootState) => state.counter.maxLocalStorageValue;\r\nexport const selectStartLocalStorageValue = (state: IRootState) => state.counter.startLocalStorageValue;\r\nexport const selectMaxValue = (state: IRootState) => state.counter.maxValue;\r\nexport const selectStartValue = (state: IRootState) => state.counter.startValue;\r\nexport const selectCountValue = (state: IRootState) => state.counter.countValue;\r\nexport const selectShow = (state: IRootState) => state.counter.show;\r\n\r\nexport const selectAll = (state: IRootState) => state.counter;\r\n","import React, { ChangeEvent } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Display from './components/Display/Display';\r\nimport SetMenu from './components/SetMenu/SetMenu';\r\n\r\nimport './App.css';\r\nimport { selectAll } from './redux/selectors';\r\nimport { setCountValueAC, setMaxLocalStorageValueAC, setMaxValueAC, setShowAC, setStartLocalStorageValueAC, setStartValueAC, useDispatch } from './redux/actions';\r\n\r\nfunction AppWithRedux() {\r\n\r\n  let dispatch = useDispatch();\r\n  const { maxLocalStorageValue, startLocalStorageValue, maxValue, startValue, countValue, show } = useSelector(selectAll);\r\n\r\n  const changeStartValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let parseStart: number = +e.currentTarget.value\r\n    if (parseStart >= -1 && maxLocalStorageValue >= -1) {\r\n      dispatch(setStartLocalStorageValueAC(parseStart))\r\n      dispatch(setShowAC('Set'))\r\n      localStorage.setItem('startValue', JSON.stringify(Number(e.currentTarget.value)))\r\n    } else if (parseStart < -1 || parseStart >= maxLocalStorageValue || maxLocalStorageValue < 0) {\r\n      dispatch(setShowAC('Error'))\r\n    }\r\n  }\r\n\r\n  const changeMaxValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let parseMax: number = +e.currentTarget.value\r\n    if (parseMax >= -1 && startLocalStorageValue >= -1) {\r\n      dispatch(setMaxLocalStorageValueAC(parseMax))\r\n      dispatch(setShowAC('Set'))\r\n      localStorage.setItem('maxValue', JSON.stringify(Number(e.currentTarget.value)))\r\n    } else if (parseMax < -1 || parseMax <= startLocalStorageValue || startLocalStorageValue < 0) {\r\n      dispatch(setShowAC('Error'))\r\n    }\r\n  }\r\n\r\n  function increment() {\r\n    if (countValue < maxValue && startLocalStorageValue >= 0 && maxLocalStorageValue >= 0 && startLocalStorageValue < maxLocalStorageValue && maxValue === maxLocalStorageValue && startValue === startLocalStorageValue) {\r\n      let value = countValue + 1\r\n      dispatch(setCountValueAC(value))\r\n      dispatch(setShowAC(value))\r\n    } else if (maxValue !== maxLocalStorageValue && startValue !== startLocalStorageValue) {\r\n      dispatch(setShowAC('Set'))\r\n    }\r\n  }\r\n\r\n  function reset() {\r\n    if (startLocalStorageValue >= 0 && maxLocalStorageValue >= 0 && startLocalStorageValue < maxLocalStorageValue && maxValue === maxLocalStorageValue && startValue === startLocalStorageValue) {\r\n      dispatch(setCountValueAC(Number(localStorage.startValue)))\r\n      dispatch(setShowAC(Number(localStorage.startValue)))\r\n    } \r\n    else if (maxValue !== maxLocalStorageValue && startValue !== startLocalStorageValue) {\r\n      dispatch(setShowAC('Set'))\r\n    }\r\n  }\r\n\r\n  const saveData = () => {\r\n    if (startLocalStorageValue >= 0 && maxLocalStorageValue >= 0 && startLocalStorageValue < maxLocalStorageValue) {\r\n      dispatch(setMaxValueAC(Number(localStorage.maxValue)))\r\n      dispatch(setStartValueAC(Number(localStorage.startValue)))\r\n      dispatch(setCountValueAC(Number(localStorage.startValue)))\r\n      dispatch(setShowAC(Number(localStorage.startValue)))\r\n    } else {\r\n      dispatch(setShowAC('Error'))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='App-wrapper'>\r\n\r\n      <SetMenu\r\n        startValue={startValue}\r\n        maxValue={maxValue}\r\n        show={show}\r\n        changeMaxValue={changeMaxValue}\r\n        changeStartValue={changeStartValue}\r\n        saveData={saveData} />\r\n      <Display\r\n        startValue={startValue}\r\n        maxValue={maxValue}\r\n        count={countValue}\r\n        show={show}\r\n        increment={increment}\r\n        reset={reset} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppWithRedux;","import { ACTIONS_TYPE, CounterReducersTypes } from './actions';\r\n\r\nexport type CounterState = {\r\n    maxLocalStorageValue: number,\r\n    startLocalStorageValue: number,\r\n    maxValue: number,\r\n    startValue: number,\r\n    countValue: number,\r\n    show: number | string\r\n};\r\n\r\nconst initialState: CounterState = {\r\n    maxLocalStorageValue: Number(localStorage.maxValue) ? Number(localStorage.maxValue) : 5,\r\n    startLocalStorageValue: Number(localStorage.startValue) ? Number(localStorage.startValue) : 0,\r\n    maxValue: Number(localStorage.maxValue) ? Number(localStorage.maxValue) : 5,\r\n    startValue: Number(localStorage.startValue) ? Number(localStorage.startValue) : 0,\r\n    countValue: Number(localStorage.startValue) ? Number(localStorage.startValue) : 0,\r\n    show: Number(localStorage.startValue) ? Number(localStorage.startValue) : 0\r\n};\r\n\r\nexport const counterReducer = (state: CounterState = initialState, action: CounterReducersTypes): CounterState => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_MAX_LOCAL_STORAGE_VALUE:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case ACTIONS_TYPE.SET_START_LOCAL_STORAGE_VALUE:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case ACTIONS_TYPE.SET_MAX_VALUE:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case ACTIONS_TYPE.SET_START_VALUE:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case ACTIONS_TYPE.SET_COUNT_VALUE:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case ACTIONS_TYPE.SET_SHOW:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers, createStore } from 'redux';\r\nimport { counterReducer } from './counterReducer';\r\n\r\nconst reducers = combineReducers({\r\n  counter: counterReducer,\r\n});\r\nexport type IGlobalState = ReturnType<typeof reducers>;\r\n\r\nexport const store = createStore(reducers);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport AppWithRedux from './AppWithRedux';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/state';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppWithRedux />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CounterWrapper\":\"Display_CounterWrapper__2_uYR\",\"DisplayWrapper\":\"Display_DisplayWrapper__1aTIy\",\"DisplayWrapperMax\":\"Display_DisplayWrapperMax__3O1ii\",\"BtnWrapper\":\"Display_BtnWrapper__2x-zM\",\"BtnIncrement\":\"Display_BtnIncrement__33bTT\",\"BtnIncrementMax\":\"Display_BtnIncrementMax__2Puj2\",\"BtnReset\":\"Display_BtnReset__sA3qJ\",\"BtnResetStart\":\"Display_BtnResetStart__2AcPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SetMenuWrapper\":\"SetMenu_SetMenuWrapper__1tO9I\",\"SetMenuMaxWrapper\":\"SetMenu_SetMenuMaxWrapper__hGR07\",\"SetMenuMaxError\":\"SetMenu_SetMenuMaxError__KaxVs\",\"SetMenuStartWrapper\":\"SetMenu_SetMenuStartWrapper__3tnkQ\",\"SetMenuStartError\":\"SetMenu_SetMenuStartError__3ifkz\",\"BtnSetWrapper\":\"SetMenu_BtnSetWrapper__3Cd3X\",\"BtnSet\":\"SetMenu_BtnSet__2k3zG\",\"BtnSetDisable\":\"SetMenu_BtnSetDisable__mTQ-y\"};"],"sourceRoot":""}